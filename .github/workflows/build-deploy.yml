name: build-deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set Config
      env: 
        PROJECT_SERVER_HOST: ${{ secrets.DEV_PROJECT_SERVER_HOST }}
        NAMESPACE: ${{ secrets.DEV_NAMESPACE }}
        APP_PUBLIC_PATH: ${{ secrets.DEV_APP_PUBLIC_PATH }}
      run: |
         envsubst < src/config/projectConfig.js > tempConfig
         cat tempConfig > src/config/projectConfig.js
         envsubst < vite.config.js.template > tempViteConfig
         cat tempViteConfig > vite.config.js
         rm tempViteConfig tempConfig
    
    - name: Set SHA
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        platforms: linux/arm64
        context: .
        file: ./Dockerfile
        push: true 
        tags: horvatic/zracni-udar-ui:dev${{ steps.vars.outputs.sha_short }}
        build-args: |
          PUBLIC_PATH=${{ secrets.DEV_NGINX_PUBLIC_PATH }}
    
    - name: Save SHA
      env: 
        TAG: dev${{ steps.vars.outputs.sha_short }}
      run: |
         envsubst < deploy/base/deployment.yaml > tempbase
         cat tempbase > deploy/base/deployment.yaml
         rm tempbase 
  
    - name: 'Upload Deploy'
      uses: actions/upload-artifact@v2
      with:
        name: deploy
        path: deploy
        retention-days: 5
        
  dev:
    name: Deploy To Dev
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
  
    - name: Setup kubectl
      env: 
        K8S_CONFIG: ${{ secrets.K8S_CONFIG }}
      run: |
        mkdir -p $HOME/.kube
        echo "${K8S_CONFIG}" | base64 --decode > $HOME/.kube/config
      
    - name: Download Deploy
      uses: actions/download-artifact@v2
      with:
        name: deploy
      
    - name: Apply pods
      run: kubectl apply -k dev -n dev
      
    - name: Wait For Deployment To Start
      run: sleep 10s
      
    - name: Wait For Pods To Start
      run: kubectl wait --for=condition=ready pod -l app=gokub-tester -n dev --timeout=10m